Давайте попробуем разобраться ещё раз:
generator - это не функция, это именно генератор функций. его использование напрямую не имеет смысла.
generator = function(set), а function(set) = function(n) sample(set, n, replace=T)
Получается, как бы, повторение такое:
Генератор - это функция function(set), а function(set) - это функция function(n), которая в свою очередь является sample(set, n, replace=T)

Тогда в строчках:
card_generator <- generator(card_deck)
coin_generator <- generator(c("Heads", "Tails"))
Мы определили вот эту переменную (set), для двух новых функций - генератора карт и монет. Но нам не хватает переменной n, поэтому её мы задаём при вызове этих функций:
card_generator(10)

Зачем так сложно? Если вы знакомы с понятием полиморфизма в языках программирования, то будет понятнее.
Два итоговых генератора различаются по принципу работы, но схожи в некоторых деталях - это sample, просто из разных массивов. Соответственно, зачем нам писать дважды этот sample, если этот общий элемент в их работе мы можем объединить в 
"надкласс" генераторов, который не несёт практического смысла сам по себе, но позволяет упростить процесс создания новых, уже практически применимых генераторов.
